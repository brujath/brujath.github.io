{"version":3,"sources":["reducers/index.js","components/App/App.js","actions/index.js","sagas/index.js","index.js"],"names":["reducer","state","arguments","length","undefined","action","type","Object","objectSpread","loading","console","log","data","json","App","this","props","getData","react_default","a","createElement","className","map","indData","index","key","competition","name","title","dangerouslySetInnerHTML","__html","embed","React","Component","mapDispatchToProps","connect","fetchData","actionWatcher","rootSaga","regenerator_default","wrap","_context","prev","next","fetch","then","response","error","sent","put","stop","_marked","_context2","takeLatest","_marked2","_context3","all","_marked3","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","render","es","components_App_App","document","getElementById"],"mappings":"iPAWiBA,EAXD,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOC,MACZ,IAAK,WACF,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBQ,SAAS,IAC/B,IAAK,gBACgB,OADAC,QAAQC,IAAIN,GACLE,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBW,KAAMP,EAAOQ,KAAMJ,SAAS,IAEpE,QACG,OAAOR,4CCFXa,qMAGFC,KAAKC,MAAMC,2CAGJ,IACAL,EAAQG,KAAKC,MAAbJ,KAEP,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,8BACCR,EAAMA,EAAKU,IAAI,SAACC,EAASC,GACxB,OACEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAOH,UAAU,sBACzBH,EAAAC,EAAAC,cAAA,UAAMG,EAAQG,YAAYC,MAC1BT,EAAAC,EAAAC,cAAA,UAAKG,EAAQK,OACbV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBQ,wBAAyB,CAACC,OAAOP,EAAQQ,aAI9E,aAtBMC,IAAMC,YA4BlBC,EAAqB,CACzBjB,QCnCqB,iBAAO,CAC1BX,KAAM,cD0CK6B,cALS,SAAClC,GAAD,MAAY,CAClCW,KAAMX,EAAMW,KACZH,QAASR,EAAMQ,UAGuByB,EAAzBC,CAA6CrB,sCEzClDsB,cAQAC,cAKeC,GAbzB,SAAUF,IAAV,IAAAvB,EAAA,OAAA0B,EAAApB,EAAAqB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEe,OAFfF,EAAAE,KAAA,EAEqBC,MAAM,yCACtBC,KAAK,SAAAC,GAAQ,OAAIA,EAASjC,QAAQ,SAAAkC,GAAK,OAAIrC,QAAQqC,MAAMA,KAH9D,OAKE,OAHMlC,EAFR4B,EAAAO,KAAAP,EAAAE,KAAA,EAKQM,YAAI,CAAE3C,KAAM,gBAAiBO,KAAMA,IAL3C,wBAAA4B,EAAAS,SAAAC,GAQA,SAAUd,IAAV,OAAAE,EAAApB,EAAAqB,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,OACE,OADFS,EAAAT,KAAA,EACQU,YAAW,WAAYjB,GAD/B,wBAAAgB,EAAAF,SAAAI,GAKe,SAAUhB,IAAV,OAAAC,EAAApB,EAAAqB,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACb,OADaY,EAAAZ,KAAA,EACPa,YAAI,CACRnB,MAFW,wBAAAkB,EAAAL,SAAAO,aCFTC,EAAiBC,cAEjBC,EAAQC,YACX7D,EACA8D,YAAgBJ,EAAgBK,WAEnCL,EAAeM,IAAI1B,GAEnB2B,iBACG/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUN,MAAOA,GACf1C,EAAAC,EAAAC,cAAC+C,EAAD,OACUC,SAASC,eAAe","file":"static/js/main.8bb11b26.chunk.js","sourcesContent":["const reducer = (state = {}, action) => {\n    switch (action.type) {\n       case 'GET_DATA':\n          return { ...state, loading: true };\n       case 'DATA_RECEIVED':console.log(action);            \n                            return { ...state, data: action.json, loading: false }\n    \n       default:\n          return state;\n     }\n  };\n  export default reducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport {getData} from '../../actions/index';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {data} = this.props;\n\n    return (\n      <div className=\"main-container\">\n        <h1>Match Highligths</h1>\n        {data? data.map((indData, index) => {\n          return (\n            <div key={index} className=\"fixtures-container\">\n              <h2 >{indData.competition.name}</h2>\n              <h4>{indData.title}</h4>\n              <div className=\"indiFixture\">\n                <div className=\"video-container\" dangerouslySetInnerHTML={{__html:indData.embed}}></div>\n              </div>\n            </div>\n            )\n        }): null}\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = {\n  getData: getData\n};\n\nconst mapStateToProps = (state) => ({\n  data: state.data,\n  loading: state.loading\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const getData = () => ({\n    type: 'GET_DATA',\n});","import { put, takeLatest, all } from 'redux-saga/effects';\n\nfunction* fetchData() {\n\n  const json = yield fetch('https://www.scorebat.com/video-api/v1')\n    .then(response => response.json(), error => console.error(error));\n\n  yield put({ type: \"DATA_RECEIVED\", json: json, });\n}\n\nfunction* actionWatcher() {\n  yield takeLatest('GET_DATA', fetchData)\n}\n\n\nexport default function* rootSaga() {\n  yield all([\n    actionWatcher(),\n  ]);\n}","import React from 'react';\nimport createSagaMiddleware from 'redux-saga';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './reducers';\nimport App from './components/App/App';\nimport rootSaga from './sagas';\n\nimport './index.css';\n\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n   reducer,\n   applyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\n\nrender(\n   <Provider store={store}>\n     <App />\n   </Provider>,document.getElementById('root')\n);"],"sourceRoot":""}